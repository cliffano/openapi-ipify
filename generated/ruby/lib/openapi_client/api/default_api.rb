=begin
#ipify

#OpenAPI client for ipify, a simple public IP address API

OpenAPI spec version: 0.9.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 3.2.1-SNAPSHOT

=end

require 'uri'

module OpenapiClient
  class DefaultApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Get your public IP address
    # @param [Hash] opts the optional parameters
    # @option opts [String] :format Response format
    # @option opts [String] :callback JSONP callback function name
    # @return [Object]
    def get_ip(opts = {})
      data, _status_code, _headers = get_ip_with_http_info(opts)
      data
    end

    # Get your public IP address
    # @param [Hash] opts the optional parameters
    # @option opts [String] :format Response format
    # @option opts [String] :callback JSONP callback function name
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def get_ip_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DefaultApi.get_ip ...'
      end
      if @api_client.config.client_side_validation && opts[:'format'] && !['json', 'jsonp'].include?(opts[:'format'])
        fail ArgumentError, 'invalid value for "format", must be one of json, jsonp'
      end
      # resource path
      local_var_path = '/'

      # query parameters
      query_params = {}
      query_params[:'format'] = opts[:'format'] if !opts[:'format'].nil?
      query_params[:'callback'] = opts[:'callback'] if !opts[:'callback'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DefaultApi#get_ip\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
