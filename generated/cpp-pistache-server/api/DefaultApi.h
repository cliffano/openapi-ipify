/**
* openapi-ipify
* OpenAPI client for ipify, a simple public IP address API
*
* OpenAPI spec version: 0.9.0
* Contact: blah@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * DefaultApi.h
 *
 * 
 */

#ifndef DefaultApi_H_
#define DefaultApi_H_


#include <pistache/endpoint.h>
#include <pistache/http.h>
#include <pistache/router.h>
#include <pistache/http_headers.h>

#include <pistache/optional.h>

#include "Object.h"
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class  DefaultApi {
public:
    DefaultApi(Pistache::Address addr);
    virtual ~DefaultApi() {};
    void init(size_t thr);
    void start();
    void shutdown();

    const std::string base = "";

private:
    void setupRoutes();

    void get_ip_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);
    void default_api_default_handler(const Pistache::Rest::Request &request, Pistache::Http::ResponseWriter response);

    Pistache::Http::Endpoint httpEndpoint;
    Pistache::Rest::Router router;


    /// <summary>
    /// Get your public IP address
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="format">Response format (optional)</param>
    /// <param name="callback">JSONP callback function name (optional)</param>
    virtual void get_ip(const Pistache::Optional<std::string> &format, const Pistache::Optional<std::string> &callback, Pistache::Http::ResponseWriter &response) = 0;

};

}
}
}
}

#endif /* DefaultApi_H_ */

