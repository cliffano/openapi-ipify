/**
 * openapi-ipify
 * OpenAPI client for ipify, a simple public IP address API
 *
 * OpenAPI spec version: 0.9.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIIp.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIIp::OAIIp(QString json) {
    init();
    this->fromJson(json);
}

OAIIp::OAIIp() {
    init();
}

OAIIp::~OAIIp() {
    this->cleanup();
}

void
OAIIp::init() {
    ip = new QString("");
    m_ip_isSet = false;
}

void
OAIIp::cleanup() {
    if(ip != nullptr) { 
        delete ip;
    }
}

OAIIp*
OAIIp::fromJson(QString json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
OAIIp::fromJsonObject(QJsonObject pJson) {
    ::OpenAPI::setValue(&ip, pJson["ip"], "QString", "QString");
    
}

QString
OAIIp::asJson ()
{
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIIp::asJsonObject() {
    QJsonObject obj;
    if(ip != nullptr && *ip != QString("")){
        toJsonValue(QString("ip"), ip, obj, QString("QString"));
    }

    return obj;
}

QString*
OAIIp::getIp() {
    return ip;
}
void
OAIIp::setIp(QString* ip) {
    this->ip = ip;
    this->m_ip_isSet = true;
}


bool
OAIIp::isSet(){
    bool isObjectUpdated = false;
    do{
        if(ip != nullptr && *ip != QString("")){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}
}

