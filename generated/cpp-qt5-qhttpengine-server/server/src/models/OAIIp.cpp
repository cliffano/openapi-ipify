/**
 * openapi-ipify
 * OpenAPI client for ipify, a simple public IP address API
 *
 * OpenAPI spec version: 0.9.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIIp.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace OpenAPI {

OAIIp::OAIIp(QString json) {
    this->fromJson(json);
}

OAIIp::OAIIp() {
    this->init();
}

OAIIp::~OAIIp() {
    
}

void
OAIIp::init() {
    m_ip_isSet = false;
}

void
OAIIp::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIIp::fromJsonObject(QJsonObject json) {
    ::OpenAPI::fromJsonValue(ip, json[QString("ip")]);
    
}

QString
OAIIp::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIIp::asJsonObject() const {
    QJsonObject obj;
	if(m_ip_isSet){
        obj.insert(QString("ip"), ::OpenAPI::toJsonValue(ip));
    }
    return obj;
}

QString
OAIIp::getIp() const {
    return ip;
}
void
OAIIp::setIp(const QString &ip) {
    this->ip = ip;
    this->m_ip_isSet = true;
}


bool
OAIIp::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(m_ip_isSet){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

}

