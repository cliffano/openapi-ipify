/*
 * openapi-ipify
 *
 * OpenAPI client for ipify, a simple public IP address API
 *
 * API version: 3.3.1-pre.0
 * Contact: blah@cliffano.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type Ip struct {

	Ip string `json:"ip"`
}

// AssertIpRequired checks if the required fields are not zero-ed
func AssertIpRequired(obj Ip) error {
	elements := map[string]interface{}{
		"ip": obj.Ip,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseIpRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Ip (e.g. [][]Ip), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseIpRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aIp, ok := obj.(Ip)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertIpRequired(aIp)
	})
}
